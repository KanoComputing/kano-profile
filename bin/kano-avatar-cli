#!/usr/bin/env python

import sys
import os
import argparse
import yaml

if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

from kano_avatar.logic import AvatarConfParser, AvatarCreator

CONF_FILE = 'sample_conf.yaml'

program_desc = "This program handles the creation of an avatar for a user of Kano World"

configuration = None

with open(CONF_FILE) as f:
    configuration = yaml.load(f)

if configuration is None:
    print 'Error configuration was not loaded, check configuration file {}'.format(CONF_FILE)
    exit()


def main():
    parser = argparse.ArgumentParser(description=program_desc)
    group_view = parser.add_argument_group('View', 'View available choices')
    group_view.add_argument('-l', '--list',
                            choices=['char', 'obj', 'all'],
                            help='List available choices for characters (char),objects (obj), or all (all).')
    group_create = parser.add_argument_group('Create', 'Create a new avatar')
    group_create.add_argument('-c', '--create',
                              type=str,
                              nargs='+',
                              help='Create a new character, specify the character name followed by the objects')
    args = parser.parse_args()

    if args.list:
        avail_conf = AvatarConfParser(configuration)
        if args.list == 'char':
            print avail_conf.list_available_chars()
        elif args.list == 'obj':
            print avail_conf.list_all_available_objs()
        elif args.list == 'all':
            print avail_conf.list_available_chars()
            print avail_conf.list_all_available_objs()
        return 0

    if args.create:
        avatar_creator = AvatarCreator(configuration)
        avatar_creator.char_select(args.create.pop(0))
        rc = avatar_creator.obj_select(args.create)
        if not rc:
            print 'Error processing the list, please double check it'
            return 1
        avatar_creator.create_avatar(save_to='output.png')


if __name__ == '__main__':
    sys.exit(main())
