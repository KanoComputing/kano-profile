#!/usr/bin/env python

# kano-profile-gui
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#

import os
import sys
from gi.repository import Gtk, Gdk

if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

import kano_profile_gui.home as home
import kano_profile_gui.badges as badges
import kano_profile_gui.projects as projects
import kano_profile_gui.swags as swags
import kano_profile_gui.menu_bar_components.menu_bar as menu_bar
import kano_profile_gui.components.constants as constants
import kano_profile_gui.menu_bar_components.progress_bar as progress_bar
from kano.gtk3.apply_styles import apply_colours


class MainWindow(Gtk.Window):
    table = None
    box = None
    label = None

    def __init__(self):
        # Create main window
        Gtk.Window.__init__(self, title='Kano-Profile')
        self.WINDOW_HEIGHT = 596
        self.WINDOW_WIDTH = 734
        self.set_size_request(self.WINDOW_WIDTH, self.WINDOW_HEIGHT)

        # Remove decoration
        self.set_decorated(False)
        self.set_resizable(False)
        self.set_position(Gtk.WindowPosition.CENTER)

        # Create common elements
        # Main grid
        self.grid = Gtk.Grid()
        self.add(self.grid)

        # Dynamic box
        self.box = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=0)

        # This is the progress bar - it overlaps with the main content in the box
        self.progress = progress_bar.ProgressBar(self.WINDOW_WIDTH)

        self.menu_bar = menu_bar.MenuBar(self.WINDOW_WIDTH)
        self.menu_bar.home_button.button.connect('clicked', self.goto, 'home')
        self.menu_bar.badges_button.connect('clicked', self.goto, 'badges')
        self.menu_bar.swag_button.connect('clicked', self.goto, 'swags')
        self.menu_bar.challenges_button.connect('clicked', self.goto, 'projects')

        # The first element attached to the grid is GtkFixed so that we can overlay the progress bar
        self.fixed = Gtk.Fixed()
        self.fixed.put(self.menu_bar.background, 0, 0)
        self.fixed.put(self.progress.fixed, 0, self.menu_bar.height - self.progress.height)
        self.fixed.put(self.box, 0, self.menu_bar.height + self.progress.height)

        self.grid.attach(self.fixed, 0, 0, 1, 1)

        # init home screen
        self.goto(self.menu_bar.home_button, 'home')

    def goto(self, button, page):
        refs = {
            'home': home,
            'badges': badges,
            'projects': projects,
            'swags': swags,
        }

        module = refs[page]

        for i in self.box.get_children():
            self.box.remove(i)

        # Hacky way to get home image changed
        # self.menu_bar.home_button.update() needs to get called on equipping
        if page == "swags":
            module.activate(self, self.box, self.menu_bar.home_button)
        else:
            module.activate(self, self.box)


def main():

    # Create style sheet
    cssProvider = Gtk.CssProvider()
    cssProvider.load_from_path(constants.media + '/CSS/style.css')
    screen = Gdk.Screen.get_default()
    styleContext = Gtk.StyleContext()
    styleContext.add_provider_for_screen(screen, cssProvider, Gtk.STYLE_PROVIDER_PRIORITY_USER)

    apply_colours()

    win = MainWindow()
    win.connect('delete-event', Gtk.main_quit)
    win.show_all()
    Gtk.main()


if __name__ == '__main__':
    main()
