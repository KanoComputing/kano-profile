#!/usr/bin/env python

# kano-login
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# UI for login screen

from gi.repository import Gtk, Gdk, GObject
GObject.threads_init()
import os
import sys

if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

from kano_profile_gui.paths import css_dir
from kano.utils import run_cmd
from kano.network import is_internet
from kano_login.login import Login
from kano_login.setup_successful import SetupSuccessful
from kano_login.about_you import AboutYou
from kano_login.register import Register
from kano_login.components.logged_in import LoggedIn
from kano_world.functions import login_using_token
from kano.gtk3.apply_styles import apply_styles
from kano.gtk3.application_window import ApplicationWindow


# These are the screens we want to be able to access from the comand line e.g. via ./kano-login 3
refs = {
    0: [Login, SetupSuccessful],
    1: AboutYou,
    2: Register,
}


class MainWindow(ApplicationWindow):

    def __init__(self, first_boot, state):

        # Create main window
        self.WINDOW_HEIGHT = 450
        self.WINDOW_WIDTH = 590
        ApplicationWindow.__init__(self, 'Kano', self.WINDOW_WIDTH, self.WINDOW_HEIGHT)

        self.username = ""
        self.email = ""
        self.password = ""
        self.birthday = ""
        self.age = 0
        self.gender = ""
        self.first_boot = first_boot

        if first_boot == 1:
            SetupSuccessful(self)
        elif state == 0:
            Login(self)
        else:
            self.goto(state)

        self.show_all()

    def goto(self, state):
        self.clear_win()
        refs[state](self)

    def clear_win(self):
        self.remove_main_widget()


def main(first_boot, page_number=0):

    login_css = Gtk.CssProvider()
    login_css_file = os.path.join(css_dir, 'login.css')
    if not os.path.exists(login_css_file):
        sys.exit('CSS file missing!')
    login_css.load_from_path(login_css_file)

    apply_styles()
    screen = Gdk.Screen.get_default()
    styleContext = Gtk.StyleContext()
    styleContext.add_provider_for_screen(screen, login_css, Gtk.STYLE_PROVIDER_PRIORITY_USER)
    success, _ = login_using_token()

    if success:
        win = LoggedIn()
        win.show_all()
        Gtk.main()

    else:
        win = MainWindow(first_boot, page_number)
        win.connect('delete-event', Gtk.main_quit)
        win.show_all()
        Gtk.main()
    return 0


if __name__ == '__main__':

    first_boot = 0
    page_number = 0
    if len(sys.argv) == 2 and sys.argv[1] == 'first_boot':
        first_boot = 1
    elif len(sys.argv) == 2:
        page_number = int(sys.argv[1])
    # Check for internet if not first boot
    if (first_boot == 0) and not is_internet():
        run_cmd('sudo /usr/bin/kano-settings 4')
        if not is_internet():
            sys.exit(1)

    sys.exit(main(first_boot, page_number))
