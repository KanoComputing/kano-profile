#!/usr/bin/env python

# kano-profile-gui.py
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#

import os
import sys
from gi.repository import Gtk

if __name__ == '__main__' and __package__ is None:
    sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import kano_profile_gui.home as home
import kano_profile_gui.badges as badges
import kano_profile_gui.projects as projects
import kano_profile_gui.swag as swag


class MainWindow(Gtk.Window):
    table = None
    box = None
    label = None

    def __init__(self):
        # Create main window
        Gtk.Window.__init__(self, title='Kano-Settings')
        self.set_size_request(450, 550)

        # Create common elements
        # Main table
        self.table = Gtk.Table(3, 4, True)
        self.add(self.table)

        # Title
        self.label = Gtk.Label()
        self.label.set_text('Kano Profile')
        self.table.attach(self.label, 0, 4, 0, 1)

        # Dynamic box
        self.box = Gtk.Box(spacing=6)
        self.table.attach(self.box, 0, 4, 1, 2)

        # Home Button
        bHome = Gtk.Button(label='Home', halign=Gtk.Align.CENTER)
        bHome.connect('clicked', self.goto, 'home')
        self.table.attach(bHome, 0, 1, 2, 3)

        # Badges Button
        bBadges = Gtk.Button(label='Badges', halign=Gtk.Align.CENTER)
        bBadges.connect('clicked', self.goto, 'badges')
        self.table.attach(bBadges, 1, 2, 2, 3)

        # Projects Button
        bProjects = Gtk.Button(label='Projects', halign=Gtk.Align.CENTER)
        bProjects.connect('clicked', self.goto, 'projects')
        self.table.attach(bProjects, 2, 3, 2, 3)

        # Swag Button
        bSwag = Gtk.Button(label='Swag', halign=Gtk.Align.CENTER)
        bSwag.connect('clicked', self.goto, 'swag')
        self.table.attach(bSwag, 3, 4, 2, 3)

        # init home screen
        self.goto(bHome, 'home')

    def goto(self, button, page):
        refs = {
            'home': home,
            'badges': badges,
            'projects': projects,
            'swag': swag,
        }

        module = refs[page]

        for i in self.box.get_children():
            self.box.remove(i)

        module.activate(self, self.box, self.label)
        self.show_all()


def main():
    win = MainWindow()
    win.connect('delete-event', Gtk.main_quit)
    win.show_all()
    Gtk.main()


if __name__ == '__main__':
    main()
