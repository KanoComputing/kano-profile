#!/usr/bin/env python

# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#

from gi.repository import Gtk, Gdk

import os
import sys
if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

from kano.utils import is_gui
from kano_profile_gui.images import get_image
import kano_profile_gui.components.constants as constants

img_size = "230x180"


class MainWindow(Gtk.Window):
    def __init__(self, newlevel, newbadges):
        if newlevel:
            title = 'Level Up!'
        elif newbadges:
            title = 'New Badges!'
        else:
            sys.exit('Nothing to display!')

        # Create main window
        Gtk.Window.__init__(self, title=title)
        self.set_size_request(350, 300)

        # Create common elements
        # Image containing the current new swag or level up screen
        box = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=10)
        self.add(box)
        self.set_decorated(False)

        # Get username from profile
        username = "Username"

        if newlevel:
            image = Gtk.Image()
            image.set_from_file(constants.media + "/images/badges/applications")
            label1 = Gtk.Label("Great job " + username + "!")
            label1.get_style_context().add_class("heading")
            msg = "You've leveled up to level {}!".format(newlevel)
            label2 = Gtk.Label()
            label2.set_text(msg)
            box.pack_start(image, False, False, 0)
            box.pack_start(label1, False, False, 0)
            box.pack_start(label2, False, False, 0)

        elif newbadges:
            print newbadges

            icon_table = Gtk.Table(len(newbadges), 2, False)
            for i, item_str in enumerate(newbadges):
                group, item, category = item_str.split(':')
                img_path = get_image(category, item, group, img_size)
                img = Gtk.Image()
                img.set_from_file(img_path)
                icon_table.attach(img, i, i + 1, 0, 1)

                label = Gtk.Label()
                label.set_text('{} {}'.format(group, item))
                label.get_style_context().add_class("heading")
                icon_table.attach(label, i, i + 1, 1, 2)
            box.pack_start(icon_table, False, False, 0)

        # OK Button
        button = Gtk.Button(label='OK', halign=Gtk.Align.CENTER)
        button.get_style_context().add_class("green_button")

        button.connect('clicked', Gtk.main_quit)
        box.pack_start(button, False, False, 10)

        box.show_all()


def main(newlevel=None, newbadges=None):

    # Create style sheet
    cssProvider = Gtk.CssProvider()
    cssProvider.load_from_path(constants.media + '/CSS/style.css')
    screen = Gdk.Screen.get_default()
    styleContext = Gtk.StyleContext()
    styleContext.add_provider_for_screen(screen, cssProvider, Gtk.STYLE_PROVIDER_PRIORITY_USER)

    if len(sys.argv) == 1:
        sys.exit('Wrong usage')

    if sys.argv[1] == 'newlevel':
        newlevel = int(sys.argv[2])
    elif sys.argv[1] == 'newbadges':
        newbadges = sys.argv[2:]

    if not is_gui():
        sys.exit('Needs GUI to run!')

    win = MainWindow(newlevel, newbadges)
    win.connect('delete-event', Gtk.main_quit)
    win.show_all()
    Gtk.main()


if __name__ == '__main__':
    main()
