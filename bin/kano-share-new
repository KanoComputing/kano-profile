#!/usr/bin/env python

# kano-login-dialog.py
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# UI for login screen

from gi.repository import Gtk, Gdk
import os
import sys

if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

from kano.network import is_internet

from kano_profile_gui.paths import css_dir
from kano_login.components import icons


def make_top_bar(title):
    height = 44

    eb = Gtk.EventBox()
    eb.get_style_context().add_class('top_bar_container')

    header = Gtk.Label(title)
    header.set_size_request(200, height)
    header.get_style_context().add_class('header')

    cross = Gtk.Image()
    cross.set_from_pixbuf(icons.Icons("cross").subpixbuf)

    close_button = Gtk.Button()
    close_button.set_image(cross)
    close_button.set_size_request(height, height)
    close_button.set_can_focus(False)
    close_button.get_style_context().add_class("top_bar_button")
    close_button.connect('clicked', Gtk.main_quit)

    grid = Gtk.Grid()
    grid.attach(header, 0, 0, 1, 1)
    grid.attach(close_button, 1, 0, 1, 1)
    grid.set_size_request(200, height)

    eb.add(grid)
    return eb


def make_workspace_list():
    row_height = 30

    grid = Gtk.Grid()
    grid.set_row_spacing(10)

    for i in xrange(10):
        label = Gtk.Label(i)
        label.set_size_request(300, row_height)
        grid.attach(label, 0, i, 1, 1)

        button = Gtk.Button('LOAD')
        button.set_size_request(100, row_height)
        grid.attach(button, 1, i, 1, 1)

    align = Gtk.Alignment(xalign=0.5, yalign=0.5, xscale=0, yscale=0)
    padding = 20
    align.set_padding(padding, padding, padding, padding)
    align.add(grid)

    return align


class MainWindow(Gtk.Window):

    def __init__(self):
        Gtk.Window.__init__(self, title='Kano Share')

        self.set_decorated(True)
        self.set_position(Gtk.WindowPosition.CENTER)

        grid = Gtk.Grid()
        self.add(grid)

        top_bar = make_top_bar('Kano Share')
        grid.attach(top_bar, 0, 0, 1, 1)

        workspace_list = make_workspace_list()
        grid.attach(workspace_list, 0, 1, 1, 1)


def main():
    if not is_internet():
        sys.exit('No internet')

    # Create style sheet
    cssProvider = Gtk.CssProvider()
    css_file = os.path.join(css_dir, 'share.css')
    if not os.path.exists(css_file):
        sys.exit('CSS file missing!')
    cssProvider.load_from_path(css_file)

    screen = Gdk.Screen.get_default()
    styleContext = Gtk.StyleContext()
    styleContext.add_provider_for_screen(screen, cssProvider, Gtk.STYLE_PROVIDER_PRIORITY_USER)

    win = MainWindow()
    win.connect('delete-event', Gtk.main_quit)
    win.show_all()
    Gtk.main()


if __name__ == '__main__':
    main()
